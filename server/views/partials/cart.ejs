 <!-- Shopping cart (with sample data) --> 
 <% if (user != null) { %>    
 <div id="cd-shadow-layer"></div>

 <div id="cd-cart">
         <h2>Cart</h2>
         <ul id="cd-cart-items" class="cd-cart-items">
             <!-- Example list item to be "cloned" -->
             <li id="addr0" data-id="0" class="hidden">
                 <span name="num0"class="cd-qty"></span> 
                 <span name="name0"></span> 
                 <div name="price0" class="cd-price"></div>
                 <span data-name="removeLink0">
                    <button id="cartItemRemove" class="cd-item-remove cd-img-replace">Remove</button>
                 </span>
             </li>
         </ul> <!-- cd-cart-items -->
         
         <div id="cartInfo" class="hidden">
            <div class="cd-cart-total">
                <p>Total <span name="cartTotalPrice" id="cartTotalPrice"></span></p>
            </div> <!-- cd-cart-total -->
    
            <button id="checkoutCartBtn" class="checkout-btn">Checkout</a>
            
            <p class="cd-go-to-cart"><a href="#0">Go to cart page</a></p>
        </div>

        <div id="cartEmpty">
            <p>NO ITEMS IN CART</p>
        </div>
     </div> <!-- cd-cart -->

<script>
    $(document).ready(function(){
        var user = `<%  user  %>`
      //console.log(user.id); --> Error, user doesn't exist in current EJS
      var cartRetrieve = {
          message: "No logged in user",
          userID: 0,
      };
      // Only retrieve user.id when user is logged in, when user.id is not empty string (NOT WORKING, NEED TO CHANGE HOW LOGOUT WORKS.)
      if (`<%= user.id %>` !== "") {     /* For some reason return keyword does not break $(document).ready() function ?? */
        cartRetrieve = {
            message: "Requesting for cart items of current user",
            userID : `<%= user.id %>`,
        };
      }
      // Total price
      var totalPrice = 0.00;
      $.ajax({
          url: 'http://localhost:3000/transaction/cart/show/',
          type: 'POST',
          dataType: 'json',
          data: JSON.stringify(cartRetrieve),
          contentType: "application/json",
          encode: true,

          success: function(data) {

            /* Start generating the list of items */
            // Check in case, test if object...?
            if ($.isEmptyObject(data)) {
                return;
            } else {
                $("#cartEmpty").addClass("hidden");
                $("#cartInfo").removeClass("hidden");
            }

            for (var i = 0; i < data.length; i++) {
                var Item = $(document.createElement("li"));
                var Num = (i + 1).toString() + "." ;
                var Name = data[i].title;
                var Price = "$" + (Number(Math.round(data[i].price+'e2')+'e-2').toFixed(2)).toString() ;
                var RemoveID = data[i].id.toString() ;
                
                totalPrice += data[i].price;
                console.log(Price);
                console.log(totalPrice);

                // Creating each item HTML code, need to check
                // NEED EDIT THE REMOVE
                $(Item).html("<span class='cd-qty'>" + Num + "</span><span>" + Name + "</span><div class='cd-price'>" + Price + "</div><span><button id='" + RemoveID + "' class='cd-item-remove cd-img-replace'>Remove</button></span>");

                $("#cd-cart-items").append(Item);
            }

            $("#cartTotalPrice").html("$" + (Number(Math.round(totalPrice+'e2')+'e-2').toFixed(2)).toString());


            // $.alert({
            //           title: 'Book added to cart',
            //           content: toString(data),
            //           buttons: {
            //               OK: function () {
            //                   location.replace("http://localhost:3000/products");
            //               }
            //           }
            //     });
             
            },
            error: function(jqXHR, textStatus, errorThrown){
                console.log(errorThrown);
            }
        });

        $("#cd-cart-items").on("click", ".cd-item-remove", function() {
                /* Get book ID of cart item that the remove button belongs to (closest list item) */  
                var book_id = $(this).attr("id").toString(); // NOTE must invoke $(this) under the click function...
                var $this = $(this) ; // For deleting the HTML element
                console.log(book_id);
                $.confirm({
                title: 'Remove item from cart',
                content: 'Confirm removing item from cart? <b>(The book may be sold out later, try wishlisting it to keep it in your memory!)</b>',
                buttons: {
                    confirm: function () {
                        // Delete the HTML element
                        $this.closest("li").remove();
                        // UPDATE THE OTHER CART DISPLAY ITEM VALUES...


                        // AJAX to edit database tables
                        var removeData = {
                            bookID : book_id,
                            userID : `<%= user.id %>`
                        }
                        
                        $.ajax({
                            url: 'http://localhost:3000/transaction/cart/remove/' + book_id.toString(),
                            type: 'POST',
                            dataType: 'json',
                            data: JSON.stringify(removeData),
                            contentType: "application/json",
                            encode: true,
                            success: function(data) { 
                                console.log(data.message);
                                $.alert({
                                    title: 'Cart item removed',
                                    content: '',
                                    buttons: {
                                    OK: function () {
                                        // location.reload(); --> Might use
                                        }
                                    }
                                });
                            },
                            error: function(jqXHR, textStatus, errorThrown){
                            console.log(errorThrown);
                            }
                        });
                    },
                    cancel: function () {
                        $.alert('Canceled');
                    } 
                    /*,
                    somethingElse: {
                        text: 'Something else',
                        btnClass: 'btn-blue',
                        keys: ['enter', 'shift'],
                        action: function(){
                            $.alert('Something else?');
                        }
                    } */
                    }
             });
        });

        $('#checkoutCartBtn').click( function() {
            // CHANGE LATER
            location.replace("http://localhost:3000/payment");
            // var cartCheckout = {
            //   message : "Checking out cart",
            //   userID : parseInt(`<%= user.id %>`),
            //   cartTotalPrice : totalPrice
            // };

            // $.ajax({
            // url: 'http://localhost:3000/transaction/cart/checkout/',
            // type: 'POST',
            // dataType: 'json',
            // data: JSON.stringify(cartCheckout),
            // contentType: "application/json",
            // encode: true,
            // success: function(data) {
            //     location.replace("http://localhost:3000/payment");
            // },
            // error: function(jqXHR, textStatus, errorThrown){
            //         console.log(errorThrown);
            // }
            // });
        });    
        
    });
</script>
<% } else { %>
<!-- Display popup on the main EJS that cart is unaccessible when user is not logged in -->
<% } %>  
